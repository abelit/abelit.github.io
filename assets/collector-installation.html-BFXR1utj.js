import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as u,b as o,w as n,a as e,f as c,d as a}from"./app-C7nDDXNs.js";const d={},m=e("h2",{id:"docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker"},[e("span",null,"Docker")])],-1),v=e("p",null,"以下命令将提取 Docker 映像并在容器中运行 Collector。替换0.105.0为您要运行的 Collector 的版本。",-1),k=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(` pull otel/opentelemetry-collector-contrib:0.105.0
`),e("span",{class:"token function"},"docker"),a(` run otel/opentelemetry-collector-contrib:0.105.0
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),b=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(` pull ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.105.0
`),e("span",{class:"token function"},"docker"),a(` run ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.105.0
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),h=e("p",null,"要从工作目录加载自定义配置文件，请将该文件挂载为卷：",-1),g=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(" run "),e("span",{class:"token parameter variable"},"-v"),a(),e("span",{class:"token variable"},[e("span",{class:"token variable"},"$("),e("span",{class:"token builtin class-name"},"pwd"),e("span",{class:"token variable"},")")]),a(`/config.yaml:/etc/otelcol-contrib/config.yaml otel/opentelemetry-collector-contrib:0.105.0
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),_=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(" run "),e("span",{class:"token parameter variable"},"-v"),a(),e("span",{class:"token variable"},[e("span",{class:"token variable"},"$("),e("span",{class:"token builtin class-name"},"pwd"),e("span",{class:"token variable"},")")]),a(`/config.yaml:/etc/otelcol-contrib/config.yaml ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.105.0
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),y=c(`<h2 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h2><p>您可以将 OpenTelemetry Collector 添加到现有docker-compose.yaml文件中，如以下示例所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token key atrule">otel-collector</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> otel/opentelemetry<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>contrib
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> ./otel<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>config.yaml<span class="token punctuation">:</span>/etc/otelcol<span class="token punctuation">-</span>contrib/config.yaml
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> 1888<span class="token punctuation">:</span><span class="token number">1888</span> <span class="token comment"># pprof extension</span>
        <span class="token punctuation">-</span> 8888<span class="token punctuation">:</span><span class="token number">8888</span> <span class="token comment"># Prometheus metrics exposed by the Collector</span>
        <span class="token punctuation">-</span> 8889<span class="token punctuation">:</span><span class="token number">8889</span> <span class="token comment"># Prometheus exporter metrics</span>
        <span class="token punctuation">-</span> 13133<span class="token punctuation">:</span><span class="token number">13133</span> <span class="token comment"># health_check extension</span>
        <span class="token punctuation">-</span> 4317<span class="token punctuation">:</span><span class="token number">4317</span> <span class="token comment"># OTLP gRPC receiver</span>
        <span class="token punctuation">-</span> 4318<span class="token punctuation">:</span><span class="token number">4318</span> <span class="token comment"># OTLP http receiver</span>
        <span class="token punctuation">-</span> 55679<span class="token punctuation">:</span><span class="token number">55679</span> <span class="token comment"># zpages extension</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="kubernetes" tabindex="-1"><a class="header-anchor" href="#kubernetes"><span>Kubernetes</span></a></h2><p>以下命令将代理部署为守护进程集和单个网关实例：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>kubectl apply <span class="token parameter variable">-f</span> https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/v0.105.0/examples/k8s/otel-config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上一个示例旨在作为起点，在实际生产使用之前进行扩展和定制。 有关生产就绪的定制和安装，请参阅OpenTelemetry Helm Charts。</p><p>您还可以使用OpenTelemetry Operator来配置和维护 OpenTelemetry Collector 实例，其功能包括自动升级处理、Service基于 OpenTelemetry 配置的配置、自动将 sidecar 注入部署等。</p><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h2><p>每个 Collector 版本都包含适用于 Linux amd64/arm64/i386 系统的 APK、DEB 和 RPM 打包。安装后，您可以找到默认配置 <code>/etc/otelcol/config.yaml</code>。</p><blockquote><p>注意：systemd是自动服务配置所必需的。</p></blockquote><h3 id="apk-安装" tabindex="-1"><a class="header-anchor" href="#apk-安装"><span>APK 安装</span></a></h3><p>要开始使用 Alpine 系统，请运行以下命令：</p>`,13),f=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[a(`apk update
apk `),e("span",{class:"token function"},"add"),a(),e("span",{class:"token function"},"wget"),a(` shadow
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_amd64.apk
apk `),e("span",{class:"token function"},"add"),a(` --allow-untrusted otelcol_0.105.0_linux_amd64.apk
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),x=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[a(`apk update
apk `),e("span",{class:"token function"},"add"),a(),e("span",{class:"token function"},"wget"),a(` shadow
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_arm64.apk
apk `),e("span",{class:"token function"},"add"),a(` --allow-untrusted otelcol_0.105.0_linux_arm64.apk
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),A=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[a(`apk update
apk `),e("span",{class:"token function"},"add"),a(),e("span",{class:"token function"},"wget"),a(` shadow
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_386.apk
apk `),e("span",{class:"token function"},"add"),a(` --allow-untrusted otelcol_0.105.0_linux_386.apk
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),w=e("h3",{id:"rpm-安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rpm-安装"},[e("span",null,"RPM 安装")])],-1),C=e("p",null,"要在 Red Hat 系统上开始，请运行以下命令：",-1),O=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),a(` yum update
`),e("span",{class:"token function"},"sudo"),a(" yum "),e("span",{class:"token parameter variable"},"-y"),a(),e("span",{class:"token function"},"install"),a(),e("span",{class:"token function"},"wget"),a(` systemctl
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_amd64.rpm
`),e("span",{class:"token function"},"sudo"),a(),e("span",{class:"token function"},"rpm"),a(),e("span",{class:"token parameter variable"},"-ivh"),a(` otelcol_0.105.0_linux_amd64.rpm
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),a(` yum update
`),e("span",{class:"token function"},"sudo"),a(" yum "),e("span",{class:"token parameter variable"},"-y"),a(),e("span",{class:"token function"},"install"),a(),e("span",{class:"token function"},"wget"),a(` systemctl
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_arm64.rpm
`),e("span",{class:"token function"},"sudo"),a(),e("span",{class:"token function"},"rpm"),a(),e("span",{class:"token parameter variable"},"-ivh"),a(` otelcol_0.105.0_linux_arm64.rpm
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),D=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),a(` yum update
`),e("span",{class:"token function"},"sudo"),a(" yum "),e("span",{class:"token parameter variable"},"-y"),a(),e("span",{class:"token function"},"install"),a(),e("span",{class:"token function"},"wget"),a(` systemctl
`),e("span",{class:"token function"},"wget"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_386.rpm
`),e("span",{class:"token function"},"sudo"),a(),e("span",{class:"token function"},"rpm"),a(),e("span",{class:"token parameter variable"},"-ivh"),a(` otelcol_0.105.0_linux_386.rpm
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),z=e("h3",{id:"手动-linux-安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#手动-linux-安装"},[e("span",null,"手动 Linux 安装")])],-1),M=e("p",null,"Linux版本适用于各种体系结构。您可以下载包含二进制文件的文件并将其手动安装到您的计算机上：",-1),P=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_amd64.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_linux_amd64.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),L=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_arm64.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_linux_arm64.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),R=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_386.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_linux_386.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_linux_ppc64le.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_linux_ppc64le.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),S=c(`<h3 id="自动服务配置" tabindex="-1"><a class="header-anchor" href="#自动服务配置"><span>自动服务配置</span></a></h3><p>默认情况下， systemd 服务安装后otelcol会使用该选项启动 。--config=/etc/otelcol/config.yaml</p><p>要使用不同的设置，请将systemd 环境文件OTELCOL_OPTIONS中的变量 设置/etc/otelcol/otelcol.conf为适当的命令行选项。您可以运行/usr/bin/otelcol --help以查看所有可用选项。您可以otelcol通过将其他环境变量添加到此文件来将它们传递给服务。</p><p>如果修改了收集器配置文件或/etc/otelcol/otelcol.conf，请otelcol通过运行以下命令重新启动服务以应用更改：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart otelcol
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要检查服务的输出otelcol，请运行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> journalctl <span class="token parameter variable">-u</span> otelcol
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="macos" tabindex="-1"><a class="header-anchor" href="#macos"><span>MacOS</span></a></h2><p>macOS版本适用于 Intel 和 ARM 系统。版本以 gzip 压缩包形式打包 ( .tar.gz)。要解压它们，请运行以下命令：</p>`,9),H=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_darwin_amd64.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_darwin_amd64.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),I=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),a(),e("span",{class:"token parameter variable"},"--proto"),a(),e("span",{class:"token string"},"'=https'"),a(),e("span",{class:"token parameter variable"},"--tlsv1.2"),a(),e("span",{class:"token parameter variable"},"-fOL"),a(` https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.105.0/otelcol_0.105.0_darwin_arm64.tar.gz
`),e("span",{class:"token function"},"tar"),a(),e("span",{class:"token parameter variable"},"-xvf"),a(` otelcol_0.105.0_darwin_arm64.tar.gz
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),K=c(`<p>每个 Collector 版本都包含一个otelcol可执行文件，您可以在解压后运行它。</p><h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h2><p>Windows版本以 gzip 压缩包形式打包 ( .tar.gz)。每个 Collector 版本都包含一个otelcol.exe可执行文件，您可以在解压后运行它。</p><h2 id="从源代码构建" tabindex="-1"><a class="header-anchor" href="#从源代码构建"><span>从源代码构建</span></a></h2><p>您可以使用以下命令根据本地操作系统构建最新版本的收集器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/open-telemetry/opentelemetry-collector.git
<span class="token builtin class-name">cd</span> opentelemetry-collector
<span class="token function">make</span> install-tools
<span class="token function">make</span> otelcorecol
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function B(V,E){const l=r("CodeTabs");return p(),u("div",null,[m,v,o(l,{id:"6",data:[{id:"DockerHub"},{id:"ghcr.io"}],active:0},{title0:n(({value:s,isActive:t})=>[a("DockerHub")]),title1:n(({value:s,isActive:t})=>[a("ghcr.io")]),tab0:n(({value:s,isActive:t})=>[k]),tab1:n(({value:s,isActive:t})=>[b]),_:1}),h,o(l,{id:"17",data:[{id:"DockerHub"},{id:"ghcr.io"}],active:0},{title0:n(({value:s,isActive:t})=>[a("DockerHub")]),title1:n(({value:s,isActive:t})=>[a("ghcr.io")]),tab0:n(({value:s,isActive:t})=>[g]),tab1:n(({value:s,isActive:t})=>[_]),_:1}),y,o(l,{id:"62",data:[{id:"AMD64"},{id:"ARM64"},{id:"i386"}],active:0},{title0:n(({value:s,isActive:t})=>[a("AMD64")]),title1:n(({value:s,isActive:t})=>[a("ARM64")]),title2:n(({value:s,isActive:t})=>[a("i386")]),tab0:n(({value:s,isActive:t})=>[f]),tab1:n(({value:s,isActive:t})=>[x]),tab2:n(({value:s,isActive:t})=>[A]),_:1}),w,C,o(l,{id:"79",data:[{id:"AMD64"},{id:"ARM64"},{id:"i386"}],active:0},{title0:n(({value:s,isActive:t})=>[a("AMD64")]),title1:n(({value:s,isActive:t})=>[a("ARM64")]),title2:n(({value:s,isActive:t})=>[a("i386")]),tab0:n(({value:s,isActive:t})=>[O]),tab1:n(({value:s,isActive:t})=>[T]),tab2:n(({value:s,isActive:t})=>[D]),_:1}),z,M,o(l,{id:"96",data:[{id:"AMD64"},{id:"ARM64"},{id:"i386"},{id:"ppc64le"}],active:0},{title0:n(({value:s,isActive:t})=>[a("AMD64")]),title1:n(({value:s,isActive:t})=>[a("ARM64")]),title2:n(({value:s,isActive:t})=>[a("i386")]),title3:n(({value:s,isActive:t})=>[a("ppc64le")]),tab0:n(({value:s,isActive:t})=>[P]),tab1:n(({value:s,isActive:t})=>[L]),tab2:n(({value:s,isActive:t})=>[R]),tab3:n(({value:s,isActive:t})=>[N]),_:1}),S,o(l,{id:"133",data:[{id:"Intel"},{id:"ARM"}],active:0},{title0:n(({value:s,isActive:t})=>[a("Intel")]),title1:n(({value:s,isActive:t})=>[a("ARM")]),tab0:n(({value:s,isActive:t})=>[H]),tab1:n(({value:s,isActive:t})=>[I]),_:1}),K])}const j=i(d,[["render",B],["__file","collector-installation.html.vue"]]),q=JSON.parse('{"path":"/guide/devops/opentelemetry/collector-installation.html","title":"安装配置Collector","lang":"zh-CN","frontmatter":{"title":"安装配置Collector","description":"Docker 以下命令将提取 Docker 映像并在容器中运行 Collector。替换0.105.0为您要运行的 Collector 的版本。 要从工作目录加载自定义配置文件，请将该文件挂载为卷： docker-compose 您可以将 OpenTelemetry Collector 添加到现有docker-compose.yaml文件中，如以下示例...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/devops/opentelemetry/collector-installation.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"安装配置Collector"}],["meta",{"property":"og:description","content":"Docker 以下命令将提取 Docker 映像并在容器中运行 Collector。替换0.105.0为您要运行的 Collector 的版本。 要从工作目录加载自定义配置文件，请将该文件挂载为卷： docker-compose 您可以将 OpenTelemetry Collector 添加到现有docker-compose.yaml文件中，如以下示例..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-03T08:57:34.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-08-03T08:57:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装配置Collector\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-03T08:57:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[]},{"level":2,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":2,"title":"Kubernetes","slug":"kubernetes","link":"#kubernetes","children":[]},{"level":2,"title":"Linux","slug":"linux","link":"#linux","children":[{"level":3,"title":"APK 安装","slug":"apk-安装","link":"#apk-安装","children":[]},{"level":3,"title":"RPM 安装","slug":"rpm-安装","link":"#rpm-安装","children":[]},{"level":3,"title":"手动 Linux 安装","slug":"手动-linux-安装","link":"#手动-linux-安装","children":[]},{"level":3,"title":"自动服务配置","slug":"自动服务配置","link":"#自动服务配置","children":[]}]},{"level":2,"title":"MacOS","slug":"macos","link":"#macos","children":[]},{"level":2,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":2,"title":"从源代码构建","slug":"从源代码构建","link":"#从源代码构建","children":[]}],"git":{"createdTime":1722675454000,"updatedTime":1722675454000,"contributors":[{"name":"abelit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":3.37,"words":1012},"filePathRelative":"guide/devops/opentelemetry/collector-installation.md","localizedDate":"2024年8月3日","autoDesc":true,"excerpt":"<h2>Docker</h2>\\n<p>以下命令将提取 Docker 映像并在容器中运行 Collector。替换0.105.0为您要运行的 Collector 的版本。</p>\\n\\n<p>要从工作目录加载自定义配置文件，请将该文件挂载为卷：</p>\\n\\n<h2>docker-compose</h2>\\n<p>您可以将 OpenTelemetry Collector 添加到现有docker-compose.yaml文件中，如以下示例所示：</p>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token key atrule\\">services</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">otel-collector</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">image</span><span class=\\"token punctuation\\">:</span> otel/opentelemetry<span class=\\"token punctuation\\">-</span>collector<span class=\\"token punctuation\\">-</span>contrib\\n    <span class=\\"token key atrule\\">volumes</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token punctuation\\">-</span> ./otel<span class=\\"token punctuation\\">-</span>collector<span class=\\"token punctuation\\">-</span>config.yaml<span class=\\"token punctuation\\">:</span>/etc/otelcol<span class=\\"token punctuation\\">-</span>contrib/config.yaml\\n    <span class=\\"token key atrule\\">ports</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token punctuation\\">-</span> 1888<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">1888</span> <span class=\\"token comment\\"># pprof extension</span>\\n        <span class=\\"token punctuation\\">-</span> 8888<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">8888</span> <span class=\\"token comment\\"># Prometheus metrics exposed by the Collector</span>\\n        <span class=\\"token punctuation\\">-</span> 8889<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">8889</span> <span class=\\"token comment\\"># Prometheus exporter metrics</span>\\n        <span class=\\"token punctuation\\">-</span> 13133<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">13133</span> <span class=\\"token comment\\"># health_check extension</span>\\n        <span class=\\"token punctuation\\">-</span> 4317<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">4317</span> <span class=\\"token comment\\"># OTLP gRPC receiver</span>\\n        <span class=\\"token punctuation\\">-</span> 4318<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">4318</span> <span class=\\"token comment\\"># OTLP http receiver</span>\\n        <span class=\\"token punctuation\\">-</span> 55679<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">55679</span> <span class=\\"token comment\\"># zpages extension</span>\\n</code></pre></div>"}');export{j as comp,q as data};
