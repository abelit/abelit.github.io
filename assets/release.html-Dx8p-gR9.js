import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-C7nDDXNs.js";const p={},e=t(`<h2 id="下载github-release内容" tabindex="-1"><a class="header-anchor" href="#下载github-release内容"><span>下载<code>github release</code>内容</span></a></h2><ul><li>get_github_release.py</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>adapters <span class="token keyword">import</span> HTTPAdapter
<span class="token keyword">from</span> urllib3<span class="token punctuation">.</span>util<span class="token punctuation">.</span>retry <span class="token keyword">import</span> Retry
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse
<span class="token keyword">import</span> concurrent<span class="token punctuation">.</span>futures
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path


<span class="token keyword">def</span> <span class="token function">create_session</span><span class="token punctuation">(</span>retries<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> backoff_factor<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> status_formalist<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">502</span><span class="token punctuation">,</span> <span class="token number">504</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Create and configure a requests session for automatic retries.&quot;&quot;&quot;</span>
    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    retry_strategy <span class="token operator">=</span> Retry<span class="token punctuation">(</span>
        total<span class="token operator">=</span>retries<span class="token punctuation">,</span>
        read<span class="token operator">=</span>retries<span class="token punctuation">,</span>
        connect<span class="token operator">=</span>retries<span class="token punctuation">,</span>
        backoff_factor<span class="token operator">=</span>backoff_factor<span class="token punctuation">,</span>
        status_forcelist<span class="token operator">=</span>status_formalist<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    adapter <span class="token operator">=</span> HTTPAdapter<span class="token punctuation">(</span>max_retries<span class="token operator">=</span>retry_strategy<span class="token punctuation">)</span>
    session<span class="token punctuation">.</span>mount<span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">,</span> adapter<span class="token punctuation">)</span>
    session<span class="token punctuation">.</span>mount<span class="token punctuation">(</span><span class="token string">&#39;https://&#39;</span><span class="token punctuation">,</span> adapter<span class="token punctuation">)</span>
    <span class="token keyword">return</span> session


<span class="token keyword">def</span> <span class="token function">extract_user_repo</span><span class="token punctuation">(</span>github_clone_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Extract username and repository name from a GitHub clone URL.&quot;&quot;&quot;</span>
    path <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>github_clone_url<span class="token punctuation">)</span><span class="token punctuation">.</span>path
    parts <span class="token operator">=</span> path<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
    user<span class="token punctuation">,</span> repo <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    repo <span class="token operator">=</span> repo<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">if</span> repo<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.git&#39;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> repo
    <span class="token keyword">return</span> user<span class="token punctuation">,</span> repo


<span class="token keyword">def</span> <span class="token function">download_asset</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> asset_url<span class="token punctuation">,</span> file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Download a single Release asset.&quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Downloading </span><span class="token interpolation"><span class="token punctuation">{</span>file_path<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">...&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>asset_url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> file_path<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> chunk <span class="token keyword">in</span> response<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span><span class="token number">8192</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Downloaded </span><span class="token interpolation"><span class="token punctuation">{</span>file_path<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Failed to download </span><span class="token interpolation"><span class="token punctuation">{</span>file_path<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">download_releases</span><span class="token punctuation">(</span>github_clone_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Download all Releases for a specified repository.&quot;&quot;&quot;</span>
    session <span class="token operator">=</span> create_session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    user<span class="token punctuation">,</span> repo <span class="token operator">=</span> extract_user_repo<span class="token punctuation">(</span>github_clone_url<span class="token punctuation">)</span>
    releases_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://api.github.com/repos/</span><span class="token interpolation"><span class="token punctuation">{</span>user<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>repo<span class="token punctuation">}</span></span><span class="token string">/releases&quot;</span></span>
    response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>releases_url<span class="token punctuation">)</span>
    releases <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    directory <span class="token operator">=</span> Path<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> repo
    directory<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Total assets to download: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>release<span class="token punctuation">[</span><span class="token string">&#39;assets&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> release <span class="token keyword">in</span> releases<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">with</span> concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>ThreadPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">as</span> executor<span class="token punctuation">:</span>
        futures <span class="token operator">=</span> <span class="token punctuation">[</span>
            executor<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>download_asset<span class="token punctuation">,</span> session<span class="token punctuation">,</span> asset<span class="token punctuation">[</span><span class="token string">&#39;browser_download_url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> directory <span class="token operator">/</span> asset<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> release <span class="token keyword">in</span> releases <span class="token keyword">for</span> asset <span class="token keyword">in</span> release<span class="token punctuation">[</span><span class="token string">&#39;assets&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
        concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>futures<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">download_releases_with_tag</span><span class="token punctuation">(</span>github_clone_url<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Download all Releases for a specified repository.&quot;&quot;&quot;</span>
    session <span class="token operator">=</span> create_session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    user<span class="token punctuation">,</span> repo <span class="token operator">=</span> extract_user_repo<span class="token punctuation">(</span>github_clone_url<span class="token punctuation">)</span>
    releases_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://api.github.com/repos/</span><span class="token interpolation"><span class="token punctuation">{</span>user<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>repo<span class="token punctuation">}</span></span><span class="token string">/releases/tags/</span><span class="token interpolation"><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>releases_url<span class="token punctuation">)</span>
    releases <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># import json</span>
    <span class="token comment"># with open(&quot;data-tag.json&quot;, &quot;w&quot;) as json_file:</span>
    <span class="token comment">#     json_file.write(json.dumps(releases,indent=3))</span>
    <span class="token comment"># exit(0)</span>

    directory <span class="token operator">=</span> Path<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> repo <span class="token operator">/</span> tag

    directory<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>parents<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token comment"># print(f&quot;Total assets to download: {sum(len(release[&#39;assets&#39;]) for release in releases if release[&#39;name&#39;] == tag)} &quot;)</span>

    <span class="token comment"># with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:</span>
    <span class="token comment">#     futures = [</span>
    <span class="token comment">#         executor.submit(download_asset, session, asset[&#39;browser_download_url&#39;], directory / asset[&#39;name&#39;])</span>
    <span class="token comment">#         for release in releases if release[&#39;name&#39;] == tag for asset in release[&#39;assets&#39;] </span>
    <span class="token comment">#     ]</span>
    
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Total assets to download: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>releases<span class="token punctuation">[</span><span class="token string">&#39;assets&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">with</span> concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>ThreadPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">as</span> executor<span class="token punctuation">:</span>
        futures <span class="token operator">=</span> <span class="token punctuation">[</span>
            executor<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>download_asset<span class="token punctuation">,</span> session<span class="token punctuation">,</span> asset<span class="token punctuation">[</span><span class="token string">&#39;browser_download_url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> directory <span class="token operator">/</span> asset<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> asset <span class="token keyword">in</span> releases<span class="token punctuation">[</span><span class="token string">&#39;assets&#39;</span><span class="token punctuation">]</span> 
        <span class="token punctuation">]</span>
        concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>futures<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: python script.py &lt;github_repo_url&gt; &lt;release_tag&gt;&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    download_releases_with_tag<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用方法</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python get_github_release https://github.com/open-telemetry/opentelemetry-collector-contrib v0.105.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","release.html.vue"]]),d=JSON.parse(`{"path":"/guide/tool/github/release.html","title":"Github页面软件","lang":"zh-CN","frontmatter":{"title":"Github页面软件","description":"下载github release内容 get_github_release.py 使用方法","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/tool/github/release.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"Github页面软件"}],["meta",{"property":"og:description","content":"下载github release内容 get_github_release.py 使用方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-03T08:57:34.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-08-03T08:57:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github页面软件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-03T08:57:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"下载github release内容","slug":"下载github-release内容","link":"#下载github-release内容","children":[]}],"git":{"createdTime":1722675454000,"updatedTime":1722675454000,"contributors":[{"name":"abelit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":1.4,"words":419},"filePathRelative":"guide/tool/github/release.md","localizedDate":"2024年8月3日","autoDesc":true,"excerpt":"<h2>下载<code>github release</code>内容</h2>\\n<ul>\\n<li>get_github_release.py</li>\\n</ul>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> sys\\n<span class=\\"token keyword\\">import</span> requests\\n<span class=\\"token keyword\\">from</span> requests<span class=\\"token punctuation\\">.</span>adapters <span class=\\"token keyword\\">import</span> HTTPAdapter\\n<span class=\\"token keyword\\">from</span> urllib3<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span>retry <span class=\\"token keyword\\">import</span> Retry\\n<span class=\\"token keyword\\">from</span> urllib<span class=\\"token punctuation\\">.</span>parse <span class=\\"token keyword\\">import</span> urlparse\\n<span class=\\"token keyword\\">import</span> concurrent<span class=\\"token punctuation\\">.</span>futures\\n<span class=\\"token keyword\\">from</span> pathlib <span class=\\"token keyword\\">import</span> Path\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">create_session</span><span class=\\"token punctuation\\">(</span>retries<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> backoff_factor<span class=\\"token operator\\">=</span><span class=\\"token number\\">0.3</span><span class=\\"token punctuation\\">,</span> status_formalist<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">500</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">502</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">504</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Create and configure a requests session for automatic retries.\\"\\"\\"</span>\\n    session <span class=\\"token operator\\">=</span> requests<span class=\\"token punctuation\\">.</span>Session<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    retry_strategy <span class=\\"token operator\\">=</span> Retry<span class=\\"token punctuation\\">(</span>\\n        total<span class=\\"token operator\\">=</span>retries<span class=\\"token punctuation\\">,</span>\\n        read<span class=\\"token operator\\">=</span>retries<span class=\\"token punctuation\\">,</span>\\n        connect<span class=\\"token operator\\">=</span>retries<span class=\\"token punctuation\\">,</span>\\n        backoff_factor<span class=\\"token operator\\">=</span>backoff_factor<span class=\\"token punctuation\\">,</span>\\n        status_forcelist<span class=\\"token operator\\">=</span>status_formalist<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">)</span>\\n    adapter <span class=\\"token operator\\">=</span> HTTPAdapter<span class=\\"token punctuation\\">(</span>max_retries<span class=\\"token operator\\">=</span>retry_strategy<span class=\\"token punctuation\\">)</span>\\n    session<span class=\\"token punctuation\\">.</span>mount<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'http://'</span><span class=\\"token punctuation\\">,</span> adapter<span class=\\"token punctuation\\">)</span>\\n    session<span class=\\"token punctuation\\">.</span>mount<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'https://'</span><span class=\\"token punctuation\\">,</span> adapter<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> session\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">extract_user_repo</span><span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Extract username and repository name from a GitHub clone URL.\\"\\"\\"</span>\\n    path <span class=\\"token operator\\">=</span> urlparse<span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>path\\n    parts <span class=\\"token operator\\">=</span> path<span class=\\"token punctuation\\">.</span>strip<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>split<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/'</span><span class=\\"token punctuation\\">)</span>\\n    user<span class=\\"token punctuation\\">,</span> repo <span class=\\"token operator\\">=</span> parts<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> parts<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n    repo <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">if</span> repo<span class=\\"token punctuation\\">.</span>endswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.git'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">else</span> repo\\n    <span class=\\"token keyword\\">return</span> user<span class=\\"token punctuation\\">,</span> repo\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">download_asset</span><span class=\\"token punctuation\\">(</span>session<span class=\\"token punctuation\\">,</span> asset_url<span class=\\"token punctuation\\">,</span> file_path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Download a single Release asset.\\"\\"\\"</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Downloading </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>file_path<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">...\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n        response <span class=\\"token operator\\">=</span> session<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>asset_url<span class=\\"token punctuation\\">,</span> stream<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n        response<span class=\\"token punctuation\\">.</span>raise_for_status<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">with</span> file_path<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'wb'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">for</span> chunk <span class=\\"token keyword\\">in</span> response<span class=\\"token punctuation\\">.</span>iter_content<span class=\\"token punctuation\\">(</span>chunk_size<span class=\\"token operator\\">=</span><span class=\\"token number\\">8192</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span>chunk<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Downloaded </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>file_path<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">except</span> requests<span class=\\"token punctuation\\">.</span>RequestException <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Failed to download </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>file_path<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>e<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">download_releases</span><span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Download all Releases for a specified repository.\\"\\"\\"</span>\\n    session <span class=\\"token operator\\">=</span> create_session<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    user<span class=\\"token punctuation\\">,</span> repo <span class=\\"token operator\\">=</span> extract_user_repo<span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">)</span>\\n    releases_url <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"https://api.github.com/repos/</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>user<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">/</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>repo<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">/releases\\"</span></span>\\n    response <span class=\\"token operator\\">=</span> session<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>releases_url<span class=\\"token punctuation\\">)</span>\\n    releases <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>json<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    directory <span class=\\"token operator\\">=</span> Path<span class=\\"token punctuation\\">.</span>cwd<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> repo\\n    directory<span class=\\"token punctuation\\">.</span>mkdir<span class=\\"token punctuation\\">(</span>exist_ok<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Total assets to download: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token builtin\\">sum</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>release<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'assets'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">for</span> release <span class=\\"token keyword\\">in</span> releases<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">with</span> concurrent<span class=\\"token punctuation\\">.</span>futures<span class=\\"token punctuation\\">.</span>ThreadPoolExecutor<span class=\\"token punctuation\\">(</span>max_workers<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> executor<span class=\\"token punctuation\\">:</span>\\n        futures <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n            executor<span class=\\"token punctuation\\">.</span>submit<span class=\\"token punctuation\\">(</span>download_asset<span class=\\"token punctuation\\">,</span> session<span class=\\"token punctuation\\">,</span> asset<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'browser_download_url'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> directory <span class=\\"token operator\\">/</span> asset<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'name'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">for</span> release <span class=\\"token keyword\\">in</span> releases <span class=\\"token keyword\\">for</span> asset <span class=\\"token keyword\\">in</span> release<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'assets'</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">]</span>\\n        concurrent<span class=\\"token punctuation\\">.</span>futures<span class=\\"token punctuation\\">.</span>wait<span class=\\"token punctuation\\">(</span>futures<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">download_releases_with_tag</span><span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">,</span> tag<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Download all Releases for a specified repository.\\"\\"\\"</span>\\n    session <span class=\\"token operator\\">=</span> create_session<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    user<span class=\\"token punctuation\\">,</span> repo <span class=\\"token operator\\">=</span> extract_user_repo<span class=\\"token punctuation\\">(</span>github_clone_url<span class=\\"token punctuation\\">)</span>\\n    releases_url <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"https://api.github.com/repos/</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>user<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">/</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>repo<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">/releases/tags/</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>tag<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n    response <span class=\\"token operator\\">=</span> session<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>releases_url<span class=\\"token punctuation\\">)</span>\\n    releases <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>json<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># import json</span>\\n    <span class=\\"token comment\\"># with open(\\"data-tag.json\\", \\"w\\") as json_file:</span>\\n    <span class=\\"token comment\\">#     json_file.write(json.dumps(releases,indent=3))</span>\\n    <span class=\\"token comment\\"># exit(0)</span>\\n\\n    directory <span class=\\"token operator\\">=</span> Path<span class=\\"token punctuation\\">.</span>cwd<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> repo <span class=\\"token operator\\">/</span> tag\\n\\n    directory<span class=\\"token punctuation\\">.</span>mkdir<span class=\\"token punctuation\\">(</span>parents<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span>exist_ok<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># print(f\\"Total assets to download: {sum(len(release['assets']) for release in releases if release['name'] == tag)} \\")</span>\\n\\n    <span class=\\"token comment\\"># with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:</span>\\n    <span class=\\"token comment\\">#     futures = [</span>\\n    <span class=\\"token comment\\">#         executor.submit(download_asset, session, asset['browser_download_url'], directory / asset['name'])</span>\\n    <span class=\\"token comment\\">#         for release in releases if release['name'] == tag for asset in release['assets'] </span>\\n    <span class=\\"token comment\\">#     ]</span>\\n    \\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Total assets to download: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>releases<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'assets'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\"> \\"</span></span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">with</span> concurrent<span class=\\"token punctuation\\">.</span>futures<span class=\\"token punctuation\\">.</span>ThreadPoolExecutor<span class=\\"token punctuation\\">(</span>max_workers<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> executor<span class=\\"token punctuation\\">:</span>\\n        futures <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n            executor<span class=\\"token punctuation\\">.</span>submit<span class=\\"token punctuation\\">(</span>download_asset<span class=\\"token punctuation\\">,</span> session<span class=\\"token punctuation\\">,</span> asset<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'browser_download_url'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> directory <span class=\\"token operator\\">/</span> asset<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'name'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">for</span> asset <span class=\\"token keyword\\">in</span> releases<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'assets'</span><span class=\\"token punctuation\\">]</span> \\n        <span class=\\"token punctuation\\">]</span>\\n        concurrent<span class=\\"token punctuation\\">.</span>futures<span class=\\"token punctuation\\">.</span>wait<span class=\\"token punctuation\\">(</span>futures<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"__main__\\"</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Usage: python script.py &lt;github_repo_url&gt; &lt;release_tag&gt;\\"</span><span class=\\"token punctuation\\">)</span>\\n        sys<span class=\\"token punctuation\\">.</span>exit<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    download_releases_with_tag<span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}`);export{k as comp,d as data};
